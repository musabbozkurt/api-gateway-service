services:

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "8080:8080"  # Map host port 8080 to container port 8080
    depends_on:
      - student-service
      - swagger-application
      - payment-service
      - openai-service
      - service-registry
      - redis-service
      - redis-insight-service
      - zipkin
    environment:
      EUREKA_CLIENT_SERVICE_URL: http://service-registry:8761/eureka
    profiles:
      - ${SERVICE_START_PROFILE}

  student-service:
    build:
      context: ./student-service
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "8081:8081"  # Map host port 8081 to container port 8080
    depends_on:
      - rabbitmq
      - postgres
      - keycloak
      - service-registry
    environment:
      EUREKA_CLIENT_SERVICE_URL: http://service-registry:8761/eureka
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
    profiles:
      - ${SERVICE_START_PROFILE}

  swagger-application:
    build:
      context: ./swagger-application
      dockerfile: Dockerfile
    ports:
      - "8082:8082"  # Map host port 8082 to container port 8080
    depends_on:
      - service-registry
    environment:
      EUREKA_CLIENT_SERVICE_URL: http://service-registry:8761/eureka
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
    profiles:
      - ${SERVICE_START_PROFILE}

  payment-service:
    build:
      context: ./payment-service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"  # Map host port 8083 to container port 8080
    depends_on:
      - rabbitmq
      - postgres
      - keycloak
      - service-registry
    environment:
      EUREKA_CLIENT_SERVICE_URL: http://service-registry:8761/eureka
      DB_HOST: postgres
      DB_PORT: 5432
    profiles:
      - ${SERVICE_START_PROFILE}

  openai-service:
    build:
      context: ./openai-service
      dockerfile: Dockerfile
    ports:
      - "8084:8084"  # Map host port 8084 to container port 8080
    depends_on:
      - service-registry
    environment:
      EUREKA_CLIENT_SERVICE_URL: http://service-registry:8761/eureka
    profiles:
      - ${SERVICE_START_PROFILE}

  service-registry:
    build:
      context: ./service-registry
      dockerfile: Dockerfile
    ports:
      - "8761:8761"  # Map host port 8761 to container port 8761
    profiles:
      - ${SERVICE_START_PROFILE}

  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    container_name: test-rabbitmq
    ports:
      - "5673:5672" # default ports 5672:5672
      - "15673:15672" # default ports 15672:15672
      # environment:
      # RABBITMQ_DEFAULT_USER: guest error: RABBITMQ_DEFAULT_USER is set but deprecated
      # RABBITMQ_DEFAULT_PASS: guest error: RABBITMQ_DEFAULT_PASS is set but deprecated

  postgres:
    image: postgres:18.0-alpine3.21
    restart: always
    container_name: postgres-db
    ports:
      - "5433:5432" # default ports 5432:5432
    environment:
      POSTGRES_DB: ${POSTGRESQL_DB}
      POSTGRES_USER: ${POSTGRESQL_USER}
      POSTGRES_PASSWORD: ${POSTGRESQL_PASS}

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:23.0.4
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
    ports:
      - "9090:9090"
    command:
      - "start-dev"

  redis-service:
    image: redis:7.4.1
    container_name: redis-service
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped

  redis-insight-service:
    image: redis/redisinsight:latest
    restart: always
    container_name: redis-insight-service
    ports:
      - "5540:5540"
    volumes:
      - redis-insight:/data

  # Note: openzipkin/zipkin-slim is mirrored as ghcr.io/openzipkin/zipkin-slim
  # The zipkin process services the UI, and also exposes a POST endpoint that
  # instrumentation can send trace data to.
  zipkin:
    image: ghcr.io/openzipkin/zipkin-slim:master
    container_name: zipkin
    # Environment settings are defined here https://github.com/openzipkin/zipkin/blob/master/zipkin-server/README.md#environment-variables
    environment:
      - STORAGE_TYPE=mem
      # Uncomment to enable self-tracing
      # - SELF_TRACING_ENABLED=true
      # Uncomment to increase heap size
      # - JAVA_OPTS=-Xms128m -Xmx128m -XX:+ExitOnOutOfMemoryError
    ports:
      # Port used for the Zipkin UI and HTTP Api
      - "9411:9411"
    # Uncomment to enable debug logging
    # command: --logging.level.zipkin2=DEBUG

volumes:
  redis-data:
  redis-insight:
