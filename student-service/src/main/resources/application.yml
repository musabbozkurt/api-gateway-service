spring:
  application:
    name: student-service
  mvc:
    pathmatch:
      matching-strategy: ant-path-matcher

  datasource:
    url: jdbc:h2:mem:testdb
    username: sa
    password: sa
    driverClassName: org.h2.Driver
  h2:
    console:
      enabled: true
      path: /h2-console

  rabbitmq:
    host: localhost
    port: 5673
    virtual-host: /
    connection-timeout: 0
    template:
      retry:
        enabled: true
        initial-interval: 1000
        max-attempts: 2
        max-interval: 3000
        multiplier: 1

  cloud:
    function:
      definition: swagger2Consumer
    #This makes the queue durable so that if the application is down, the messages would still be published.
    #These are then processed once the application is up again.
    #Instruction defines exchange and queue names
    #Dead Letter queue is created automatically and bound to main instruction queue.
    stream:
      bindings:
        studentProducer-out-0:
          destination: student_events_destination
          group: student_events_group
        swagger2Consumer-in-0:
          destination: swagger2_events_destination
          group: swagger2_events_group
          consumer:
            maxAttempts: 1
            concurrency: 1
      rabbit:
        bindings:
          swagger2Consumer-in-0:
            consumer:
              exchangeType: fanout
              autoBindDlq: true
              requeueRejected: false
              republishToDlq: true
              dlqDeadLetterExchange:
              dlqTtl: 300000
      default:
        contentType: application/json

  zipkin:
    base-url: http://localhost:9411
    enabled: false

server:
  port: 8081

jackson:
  default-property-inclusion: non_null
  serialization:
    indent-output: true